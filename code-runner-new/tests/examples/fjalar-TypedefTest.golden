rm fjalar-TypedefTest.vgtrace
var trace = {
  "code": "// From the test suite of https://github.com/codespecs/daikon\n//   daikon/tests/kvasir-tests/\n\n// Tests the use of typedefs to access unnamed struct variables\n\n#include <stdio.h>\n#include <stdlib.h>\n\n// On x86-64 (AMD64) small struct arguments are pass by value in registers.\n// However, DynComp (by design) only allocates a single tag per register.\n// This causes 'a' and 'b' below to be marked with a false interaction.\n// I'm making 'a' a long for now; but if we ever change this implementation\n// (i.e., allocate byte tags for registers like we do for memory) then we\n// should change it back to int. (markro)\n\ntypedef struct {\n//int a;\n  long a;\n  char b;\n  double c;\n} anonymousStruct;\n\nenum {MON, TUES, WED} unnamedGlobalEnum;\n\ntypedef unsigned int ROUTEBAGA;\n\nstatic anonymousStruct* createCopy(anonymousStruct a, ROUTEBAGA x) {\n  anonymousStruct* copy = (anonymousStruct*)(malloc(sizeof(*copy)));\n  *copy = a;\n  return copy;\n}\n\nanonymousStruct globalStruct;\n\nint main()\n{\n  anonymousStruct* myCopy;\n\n  globalStruct.a = 5;\n  globalStruct.b = 'b';\n  globalStruct.c = 3.14159;\n\n  myCopy = createCopy(globalStruct, 102);\n  return 0;\n}\n", 
  "trace": []
};
