name: spp
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    image: spp-backend:dev
    container_name: spp-backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /tmp:/tmp
      - /var/run/docker.sock:/var/run/docker.sock  # For spawning containers in local mode
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - EXEC_MODE=${EXEC_MODE}
      - NODE_ENV=development
      - PORT=${PORT}
      - LAMBDA_FUNCTION_NAME=${LAMBDA_FUNCTION_NAME}
      - TRACESTORE_NAME=${TRACESTORE_NAME}
      - USER_CODE_FILE_PREFIX=${USER_CODE_FILE_PREFIX}
    depends_on:
      - code-runner-local-build

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        SPP_API_URL: "http://localhost:3000/api"
    image: spp-frontend:dev
    container_name: spp-frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development

  frontend-legacy:
    build:
      context: ./frontend-legacy
      dockerfile: Dockerfile.dev
      args:
        SPP_API_URL: "http://localhost:3000/api"
    image: spp-frontend-legacy:dev
    container_name: spp-frontend-legacy
    ports:
      - "8000:8000"
    volumes:
      - ./frontend-legacy:/app
    environment:
      - NODE_ENV=development
  # Build code-runner image as part of compose
  code-runner-local-build:
    build:
      context: ./code-runner
      dockerfile: local/Dockerfile.dev
    image: spp-code-runner-local:dev
    deploy:
      replicas: 0 # Don't spin up an instance of the code-runner image
    command: echo "code-runner-local image built"
    networks:
      - no-internet
  
# Isolated network for user code execution
networks:
  no-internet:
    driver: bridge
    internal: true